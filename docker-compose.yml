version: "3.9"

services:
  db:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    restart: always
    networks:
      - my-network

  pgadmin-compose:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@carford.com.br"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
    ports:
      - "15432:80"
    # restart: always
    depends_on:
      - db
    networks:
      - my-network

  flask:
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
    container_name: flask
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 "create_app:create_app()"
    volumes:
      - ./code/backend:/code
    # ports:
    #   - 8000:8000
    restart: always
    networks:
      my-network:
        aliases:
          - flask-app

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./code/backend:/code
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - my-network
    depends_on:
      - flask
      
networks:
  my-network:
    driver: bridge
