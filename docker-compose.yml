version: "3.9"

services:
  db:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend-network
  
  pgadmin-compose:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@postgres.com.br"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
    ports:
      - "15432:80"
    restart: always
    depends_on:
      - db
    networks:
      - backend-network

  flask:
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
    container_name: flask
    command: gunicorn --bind 0.0.0.0:5000 --workers 4 wsgi:app
    environment:
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    volumes:
      - ./code/backend/app:/var/www/
    restart: unless-stopped
    ports:
      - '5000'
    networks:
      - frontend-network
      - backend-network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./code/backend/app:/var/www/
      - ./docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - frontend-network
    depends_on:
      - flask

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

